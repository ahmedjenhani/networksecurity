name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-gcr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure Google Cloud credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Login to Google Container Registry (GCR)
        run: gcloud auth configure-docker

      - name: Build, tag, and push image to Google Container Registry (GCR)
        env:
          GCR_REGISTRY: gcr.io
          GCR_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
          GCR_REPOSITORY: networksecurity
          IMAGE_TAG: latest
        run: |
          # Build a docker container and
          # push it to GCR so that it can
          # be deployed to Google Kubernetes Engine (GKE) or other services.
          docker build -t $GCR_REGISTRY/$GCR_PROJECT/$GCR_REPOSITORY:$IMAGE_TAG .
          docker push $GCR_REGISTRY/$GCR_PROJECT/$GCR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$GCR_REGISTRY/$GCR_PROJECT/$GCR_REPOSITORY:$IMAGE_TAG"

  Continuous-Deployment:
    needs: build-and-push-gcr-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Google Cloud credentials
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Login to Google Container Registry (GCR)
        run: gcloud auth configure-docker

      - name: Pull latest image
        run: |
          docker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/networksecurity:latest

      - name: Stop and remove container if running
        run: |
          docker ps -q --filter "name=networksecurity" | grep -q . && docker stop networksecurity && docker rm -fv networksecurity

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8080:8080 --ipc="host" --name=networksecurity -e 'GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' gcr.io/${{ secrets.GCP_PROJECT_ID }}/networksecurity:latest

      - name: Clean previous images and containers
        run: |
          docker system prune -f